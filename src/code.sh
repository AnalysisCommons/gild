#!/bin/bash
# gild 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of gds_file: '$gds_file'"
    echo "Value of lead_snp: '$lead_snp'"
    echo "Value of start_pos: '$start_pos'"
    echo "Value of stop_pos: '$stop_pos'"
    echo "Value of results_files: '$results_files'"
    echo "Value of ld_window_kb: '$ld_window_kb'"
    echo "Value of ld_window: '$ld_window'"
    echo "Value of ld_window_r2: '$ld_window_r2'"

    # Install R v3.3 and add to path
    make &
    wait
    export PATH=/opt/R/bin/:${PATH}
    export MKL_NUM_THREADS=1
    echo "INSTALLING GENESIS"
    Rscript install_genesis.R &
    
    wait
    set -x

    dx download "$gds_file" -o gds_file

    mkdir -p out/ld_results

    # Subset the GDS file to the region of interest and write out a temporary VCF
    Rscript subset_gds2vcf.R gds_file $start_pos $stop_pos
    
    # First fix the ID column in the VCF
    chrom_line=$(grep -n CHROM tmp.vcf | cut -d':' -f1 )
    awk -v n="$chrom_line" 'FNR==NR{a[NR+n-1]=$1;next}{$3=a[FNR]}1' list.txt tmp.vcf | tr ' ' '\t' > tmp2.vcf
    mv tmp2.vcf tmp.vcf

    # What does the vcf look like?
    cut -c1-100 tmp.vcf

    # Using PLINK, calculate LD between between SNP of interest and others in the VCF
    /home/dnanexus/plink2 --vcf tmp.vcf --r2 --ld-snp $lead_snp --ld-window-kb $ld_window_kb --ld-window $ld_window --ld-window-r2 $ld_window_r2 --out $results_files

    ls -lh

    # Upload results
    ld_results=( $results_files.ld $results_files.log $results_files.nosex )
    echo "ld_results: ${ld_results[@]}"
    mv ${ld_results[@]} out/ld_results
    echo "OUT FOLDER: "
    ls out/*
    
    echo "Uploading results"
    dx-upload-all-outputs
}
